"""
Do Not Edit this file. You may and are encouraged to look at it for reference.
"""

import unittest
import math
import rock

class TestRockEvolve( unittest.TestCase ):

    def setUp( self ):
        self.expected_x = 100
        self.expected_y = 200
        self.expected_dx = 0.0
        self.expected_dy = 0.0
        self.expected_rotation = 0
        self.expected_world_width = 600
        self.expected_world_height = 400

        self.constructed_obj = rock.Rock( self.expected_x, self.expected_y, self.expected_world_width, self.expected_world_height )
        
        return

    def tearDown( self ):
        return

    def test001_evolveMovesRock( self ):
        dt = 0.25
        expected_x = self.expected_x + self.constructed_obj.getDX( ) * dt
        expected_y = self.expected_y + self.constructed_obj.getDY( ) * dt
        expected_dx = self.constructed_obj.getDX( )
        expected_dy = self.constructed_obj.getDY( )
        expected_rotation = ( self.constructed_obj.getRotation( ) + self.constructed_obj.getSpinRate( ) * dt ) % 360
        
        self.constructed_obj.evolve( dt )
        
        self.assertAlmostEqual( self.constructed_obj.getX( ), expected_x )
        self.assertAlmostEqual( self.constructed_obj.getY( ), expected_y )
        self.assertAlmostEqual( self.constructed_obj.getDX( ), expected_dx )
        self.assertAlmostEqual( self.constructed_obj.getDY( ), expected_dy )
        self.assertAlmostEqual( self.constructed_obj.getRotation( ), expected_rotation )
        return
    
    def test002_evolveMovesRock( self ):
        dt = 0.25
        expected_x = self.expected_x + self.constructed_obj.getDX( ) * dt
        expected_y = self.expected_y + self.constructed_obj.getDY( ) * dt
        expected_dx = self.constructed_obj.getDX( )
        expected_dy = self.constructed_obj.getDY( )
        expected_rotation = ( self.constructed_obj.getRotation( ) + self.constructed_obj.getSpinRate( ) * dt ) % 360
        
        self.constructed_obj.evolve( dt )
        
        self.assertAlmostEqual( self.constructed_obj.getX( ), expected_x )
        self.assertAlmostEqual( self.constructed_obj.getY( ), expected_y )
        self.assertAlmostEqual( self.constructed_obj.getDX( ), expected_dx )
        self.assertAlmostEqual( self.constructed_obj.getDY( ), expected_dy )
        self.assertAlmostEqual( self.constructed_obj.getRotation( ), expected_rotation )
        return
    
def suite( ):
    return unittest.TestLoader( ).loadTestsFromTestCase( TestRockEvolve )

if __name__ == '__main__':
    runner = unittest.TextTestRunner( )
    runner.run( suite( ) )
