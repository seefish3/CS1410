"""
Do Not Edit this file. You may and are encouraged to look at it for reference.
"""

import unittest
import math
import rock

class TestRockConstructorAndGetters( unittest.TestCase ):

    def setUp( self ):
        self.expected_x = 100
        self.expected_y = 200
        self.expected_min_rotation = 0
        self.expected_max_rotation = 359.9
        self.expected_min_spin_rate = -90
        self.expected_max_spin_rate = 90
        self.expected_world_width = 600
        self.expected_world_height = 400
        self.expected_minimum_velocity = 10
        self.expected_maximum_velocity = 20
        
        self.constructed_obj = rock.Rock( self.expected_x, self.expected_y, self.expected_world_width, self.expected_world_height )
        
        return

    def tearDown( self ):
        return

    def test001_ConstructorSetsX( self ):
        self.assertEqual( self.constructed_obj.getX( ), self.expected_x )
        return
    
    def test002_ConstructorSetsY( self ):
        self.assertEqual( self.constructed_obj.getY( ), self.expected_y )
        return
    
    def test003_ConstructorSetsDXAndDY( self ):
        dx = self.constructed_obj.getDX( )
        dy = self.constructed_obj.getDY( )
        velocity = math.sqrt( dx*dx + dy*dy )
        self.assertGreaterEqual( velocity, self.expected_minimum_velocity )
        self.assertLessEqual( velocity, self.expected_maximum_velocity )
        return
    
    def test004_ConstructorSetsDXAndDY( self ):
        dx = self.constructed_obj.getDX( )
        dy = self.constructed_obj.getDY( )
        velocity = math.sqrt( dx*dx + dy*dy )
        self.assertGreaterEqual( velocity, self.expected_minimum_velocity )
        self.assertLessEqual( velocity, self.expected_maximum_velocity )
        return
    
    def test005_ConstructorSetsWorldWidth( self ):
        self.assertEqual( self.constructed_obj.getWorldWidth( ), self.expected_world_width )
        return
    
    def test006_ConstructorSetsWorldHeight( self ):
        self.assertEqual( self.constructed_obj.getWorldHeight( ), self.expected_world_height )
        return

    def test007_ConstructorSetsRotation( self ):
        self.assertGreaterEqual( self.constructed_obj.getRotation( ), self.expected_min_rotation )
        self.assertLessEqual( self.constructed_obj.getRotation( ), self.expected_max_rotation )
        return
 
    def test008_ConstructorSetsNonEmptyPolygon( self ):
        unexpected_polygon = [ ]
        self.assertNotEqual( self.constructed_obj.getPolygon( ), unexpected_polygon )
        return
   
    def test009_ConstructorSetsSpinRate( self ):
        self.assertGreaterEqual( self.constructed_obj.getSpinRate( ), self.expected_min_spin_rate )
        self.assertLessEqual( self.constructed_obj.getSpinRate( ), self.expected_max_spin_rate )
        return
   
def suite( ):
    return unittest.TestLoader( ).loadTestsFromTestCase( TestRockConstructorAndGetters )

if __name__ == '__main__':
    runner = unittest.TextTestRunner( )
    runner.run( suite( ) )
